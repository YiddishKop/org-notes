<div class="pf-content"><p>This week we welcome Luke Plant as our PyDev of the Week. Luke is one of the core developers of Django, a very popular Python web framework. Luke writes a <a href="https://lukeplant.me.uk/blog/" target="_blank">blog</a> with many articles about Django. If you&#8217;d like to see some of Luke&#8217;s contributions, then you will want to wander over to his <a href="https://github.com/spookylukey" target="_blank">Github profile</a> soon. Let&#8217;s take a few minutes to get to know Luke better!</p>
<p><img src="http://www.blog.pythonlibrary.org/wp-content/uploads/2017/02/plants-300x178.jpeg" alt="" width="300" height="178" class="aligncenter size-medium wp-image-6230" /></p>
<p><strong>Can you tell us a little about yourself (hobbies, education, etc):</strong></p>
<p><em>I grew up in England, and currently live in Turkey with my wife and son, and a second on the way!  [He means a second child, not a second wife &#8211; The Wife]. At the moment my dominating &#8216;hobby&#8217; is learning Turkish, which is pretty tough work, but very rewarding too. I also enjoy playing the guitar (though not to any high standard!).</em></p>
<p>Regarding learning to program, I&#8217;ve been mainly self-taught: as a kid it was the 8-bit, 64K Oric Atmos that my dad bought (which was brilliant &#8211; there was an invaluable <a href="http://www.48katmos.freeuk.com/br5.htm" target="_blank">Advanced Users Manual</a> that told you pretty much everything about it, including a complete ROM disassembly listing), then later messing around with VBA and Microsoft Office. My dad&#8217;s interest in messing around with computers meant that we were one of the first families I knew to be regularly using email and the web.</p>
<p>I went to university to study Physics/Natural Sciences, but in my first week there, my career in science was derailed when <a href="https://twitter.com/michael_meeks" target="_blank">a friend</a> decided to install Linux on my Windows machine before I even knew what he was doing. Thankfully he left Windows on there too, rather than just wiping my hard drive! But that introduced me to the Open Source world, which re-kindled my previous interest in programming, and both the fun and the philosophy behind Open Source programming have been a major influence on me since. Thankfully, although I was studying science not programming, I was able to do a fair number of programming related projects &#8211; one of which I recently had fun <a href="https://lukeplant.me.uk/blog/posts/ipython-notebook-essentials-review/" target="_blank">re-implementing</a> using IPython Notebook.</p></div>
<p><span id="more-6228"></span></p>
<p><strong>Why did you start using Python?</strong></p>
<p><em>I think I started getting into it partly due to having nothing to do at work! A number of years after university, I had started a new job, but a recruitment timing error meant I had nothing to do for the first few months. I think it was at this point that I started playing with Python. Shortly after, I was motivated by the need to replace a ropey PHP website with <a href="https://www.cciw.co.uk/" target="_blank">something better</a>, and then discovered Django (which had only just been open sourced, around summer 2005). This was probably my first serious Python project, but it&#8217;s still going well. Wanting to contribute to Django itself meant I had to learn even more. I was around at just the right time &#8211; when the project was much smaller and more fluid &#8211; and managed to get on the core Django team with a fraction of the effort that other more worthy developers since then have needed!</em></p>
<p><strong>What other programming languages do you know and which is your favorite?</strong><br />
<em><br />
Historically in order &#8211; BASIC, 6502 Assembly, VBA, C, smatterings of C++, Perl, PHP, Javascript, Python, Haskell. However, of these I really wouldn&#8217;t be competent in any but Python and Javascript these days. I&#8217;m grateful that I get to use a lot of Python, which I enjoy. I also really enjoy Haskell and similar languages, but generally have only used them on an experimental level.</em></p>
<p><strong>What projects are you working on now?</strong></p>
<p><em>Mainly I work on a Django project for my client Wolf &#038; Badger, and maintain some other Django projects including <a href="https://www.cciw.co.uk/" target="_blank">CCIW</a> and <a href="https://learnscripture.net/dashboard/" target="_blank">learnscripture.net</a>. These inevitably mean I&#8217;ve created, contributed to, or maintain various other Python/Django projects e.g. <a href="https://github.com/django-functest/django-functest/" target="_blank">django-functest</a> and <a href="https://github.com/spookylukey/django-paypal/" target="_blank">django-paypal</a>.</em></p>
<p><strong>Which Python libraries are your favorite (core or 3rd party)?</strong></p>
<p><em>I think this is a hard question to answer well &#8211; the best libraries and tools are often ones that you barely notice, but are just always there, doing what they should be doing. There are others which stand out by their excellence. There are probably many I&#8217;m not aware of, but some of the ones I am aware of using a lot, or am very impressed by, are:</em></p>
<ul>
<li><a href="https://docs.python.org/2/library/argparse.html" target="_blank">argparse</a> (stdlib)</li>
<li><a href="http://ipython.org/" target="_blank">IPython</a></li>
<li><a href="http://pandas.pydata.org/" target="_blank">pandas</a></li>
<li><a href="https://flake8.readthedocs.io/en/latest/" target="_blank">flake8</a> (now an indispensable part of all my projects)</li>
<li><a href="https://pypi.python.org/pypi/jedi" target="_blank">jedi</a> (via <a href="https://github.com/tkf/emacs-jedi" target="_blank">emacs-jedi</a>)</li>
</ul>
<p>Another I&#8217;ve just started to use is <a href="https://pypi.python.org/pypi/hypothesis" target="_blank">hypothesis</a>, which seems to be very nicely designed, and I imagine I&#8217;ll use a lot more in the future. Of course there is Django as well, but I kind of take it for granted, and its also fair to say that despite a fairly progressive deprecation policy, our backwards compatibility attitude means there is quite a lot in there which isn&#8217;t the nicest code any more. It&#8217;s doing OK for its age I guess!</p>
<p><strong>Where do you see Python going as a programming language? </strong></p>
<p><em>It seems the story on async programming is getting better and better, which can only be good if it saves us from Node! I expect there to be a lot of growth in that area. There also seems to be a move towards static/gradual typing. I&#8217;m skeptical about the kind of improvements this brings &#8211; it will likely be primarily performance hints for numerically intensive code. Personally I&#8217;m more interested in the other benefits that a strong static type system can bring, and you can&#8217;t get those just by adding some type hints. Also, a major part of the character of Python is that it is very approachable for scientists and others who are not primarily programmers. I think that limits the amount that Python can evolve. On the other hand, the popularity of Python in areas like data science, astronomy, biology etc. will hopefully encourage growth in directions that are compatible with Python&#8217;s core strengths.</em></p>
<p><strong>What is your take on the current market for Python programmers? </strong></p>
<p><em>From my limited perspective, I think the Python job market is in good shape, especially in terms of opportunities that pay well and are projects you would enjoy working on. With the explosion of the role of data science, and Python&#8217;s great placement for that, I think the future is fairly bright on that front for Python programmers.</em></p>
<p><strong>Is there anything else youâ€™d like to say?</strong></p>
<p><em>Reflecting on some of my answers above reminds me of a great article I read on the <a href="https://www.theatlantic.com/magazine/archive/2016/05/why-luck-matters-more-than-you-might-think/476394/" target="_blank">key role of luck</a> in getting on in life. Although as a Christian I don&#8217;t technically believe in luck, I&#8217;ve definitely been very lucky, and I think it&#8217;s a really important thing to remember.</em></p>
<p><a class="a2a_button_facebook" href="http://www.addtoany.com/add_to/facebook?linkurl=http%3A%2F%2Fwww.blog.pythonlibrary.org%2F2017%2F03%2F13%2Fpydev-of-the-week-luke-plant%2F&linkname=PyDev%20of%20the%20Week%3A%20Luke%20Plant" title="Facebook" rel="nofollow" target="_blank"></a><a class="a2a_button_twitter" href="http://www.addtoany.com/add_to/twitter?linkurl=http%3A%2F%2Fwww.blog.pythonlibrary.org%2F2017%2F03%2F13%2Fpydev-of-the-week-luke-plant%2F&linkname=PyDev%20of%20the%20Week%3A%20Luke%20Plant" title="Twitter" rel="nofollow" target="_blank"></a><a class="a2a_button_google_plus" href="http://www.addtoany.com/add_to/google_plus?linkurl=http%3A%2F%2Fwww.blog.pythonlibrary.org%2F2017%2F03%2F13%2Fpydev-of-the-week-luke-plant%2F&linkname=PyDev%20of%20the%20Week%3A%20Luke%20Plant" title="Google+" rel="nofollow" target="_blank"></a><a class="a2a_dd addtoany_share_save" href="https://www.addtoany.com/share#url=http%3A%2F%2Fwww.blog.pythonlibrary.org%2F2017%2F03%2F13%2Fpydev-of-the-week-luke-plant%2F&title=PyDev%20of%20the%20Week%3A%20Luke%20Plant"></a></p>
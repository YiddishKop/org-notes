<p> Coffeecupp_ over at the Emacs reddit asks if there’s a way on macOS to <a href="https://www.reddit.com/r/emacs/comments/5zfmp6/osx_minimizehide_instead_of_exit/">prevent Emacs from quitting when the last window is closed</a>. That’s not a problem I have but I learned a couple of useful things from the discussion. </p>
<p> First, and this applies to all OSes, mbork <a href="https://lists.gnu.org/archive/html/help-gnu-emacs/2016-01/msg00200.html">suggests</a> just setting the <code>confirm-kill-emacs</code> variable: </p>
<div class="org-src-container">
<pre class="src src-emacs-lisp">(<span style="color: #a020f0;">setq</span> confirm-kill-emacs #'y-or-n-p) <span style="color: #b22222;">; </span><span style="color: #b22222;">or yes-or-no-p is you're really paranoid</span>
</pre>
</div>
<p> For some technical reasons that doesn’t do quite what coffeecupp_ needed but it did solve a problem for me. I have a periodic task in which I need to take data from a Notes app window into Emacs. I do that be positioning my Emacs window over the Notes window so just the data I’m interested in shows. Afterwards, I usually use <kbd>Cmd</kbd>+<kbd>Tab</kbd> to bring the Notes app to the foreground so I can kill it with <kbd>Cmd</kbd>+<kbd>q</kbd>. Of course, I usually type <kbd>Cmd</kbd>+<kbd>q</kbd> first and kill Emacs instead. </p>
<p> I was sure that Emacs had a way to ask for confirmation before killing but I never got around to finding out what it is. Thanks to mbork, I now know so I won’t have that particular problem again. Normally, I hate confirmation messages like that but I kill Emacs on purpose <i>much</i> less frequently than I do by accident so it make sense for my particular workflow. </p>
<p> The other thing I learned is the <a href="http://stackoverflow.com/questions/19069612/how-to-close-a-emacsclient-gui-frame-without-killing-the-server">difference between emacs <img alt="–" class="wp-smiley" src="https://s.w.org/images/core/emoji/2.2.1/72x72/2013.png" style="height: 1em;" />daemon and starting server mode in init.el</a>. I always assumed they did pretty much the same thing but it turns out there’s a useful difference. If your goal is to ensure that Emacs keeps running<img alt="—" class="wp-smiley" src="https://s.w.org/images/core/emoji/2.2.1/72x72/2014.png" style="height: 1em;" />as opposed to just enabling <code>emacsclient</code><img alt="—" class="wp-smiley" src="https://s.w.org/images/core/emoji/2.2.1/72x72/2014.png" style="height: 1em;" />then you should use <code>emacs --daemon</code>. The answers in the above Stack Overflow question explain this in a little more detail. </p>
<p> So, not bad for a question I didn’t care about in the first place. </p>
<p> <b>UPDATE</b> <span class="timestamp-wrapper"><span class="timestamp">[2017-03-16 Thu 13:23]</span></span>: y-or-no-p → y-or-n-p. </p>
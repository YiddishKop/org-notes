<p>
This weekend I found myself doing some heavy-weight refactoring in CIDER. This
is the kind of situation where Flycheck helps a lot, but I still needed it to do
a bit more. Every time I made a significant change to a file, I had to visit 3
or 5 other files and trigger Flycheck on each one of them. It wasnâ€™t long before
I decide there had to be a way to just Flycheck a whole directory.
</p>

<p>
Enter <code>endless/flycheck-dir</code>. This command runs Flycheck on all files in the
current directory and reports the result to the <code>*Compile-Log*</code> buffer. You can
then navigate through all issues for the entire directory by <kbd>TAB</kbd>-ing through
the buffer or using <a href="http://doc.endlessparentheses.com/Fun/next-error"><code>next-error</code></a>.
</p>
<figure class="highlight"><pre><code class="language-cl" data-lang="cl"><span class="p">(</span><span class="nv">define-key</span> <span class="nv">flycheck-command-map</span> <span class="s">"d"</span>
  <span class="nf">#'</span><span class="nv">endless/flycheck-dir</span><span class="p">)</span>
<span class="p">(</span><span class="nb">defun</span> <span class="nv">endless/flycheck-dir</span> <span class="p">(</span><span class="nv">dir</span><span class="p">)</span>
  <span class="s">"Run flycheck for each file in current directory.
Results are reported in a compilation buffer."</span>
  <span class="p">(</span><span class="nv">interactive</span> <span class="s">"DDirectory: "</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">displaying-byte-compile-warnings</span>
   <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">p</span> <span class="no">nil</span><span class="p">))</span>
     <span class="p">(</span><span class="nv">with-current-buffer</span> <span class="p">(</span><span class="nv">get-buffer-create</span>
                           <span class="nv">byte-compile-log-buffer</span><span class="p">)</span>
       <span class="p">(</span><span class="k">setq</span> <span class="nv">default-directory</span> <span class="nv">dir</span><span class="p">)</span>
       <span class="p">(</span><span class="nb">unless</span> <span class="p">(</span><span class="nb">eq</span> <span class="nv">major-mode</span> <span class="ss">'compilation-mode</span><span class="p">)</span>
         <span class="p">(</span><span class="nv">compilation-mode</span><span class="p">))</span>
       <span class="p">(</span><span class="nv">goto-char</span> <span class="p">(</span><span class="nv">point-max</span><span class="p">))</span>
       <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">inhibit-read-only</span> <span class="no">t</span><span class="p">))</span>
         <span class="p">(</span><span class="nv">insert</span> <span class="s">"\n\xc\n\n"</span><span class="p">))</span>
       <span class="p">(</span><span class="k">setq</span> <span class="nv">p</span> <span class="p">(</span><span class="nv">point</span><span class="p">)))</span>
     <span class="p">(</span><span class="nb">dolist</span> <span class="p">(</span><span class="nv">file</span> <span class="p">(</span><span class="nv">directory-files</span> <span class="s">"./"</span> <span class="no">nil</span>
                                    <span class="s">"\\`[^\\.].*\\'"</span><span class="p">))</span>
       <span class="p">(</span><span class="nv">endless/-flycheck-file</span> <span class="nv">file</span><span class="p">))</span>
     <span class="p">(</span><span class="nv">with-selected-window</span> <span class="p">(</span><span class="nv">display-buffer</span>
                            <span class="nv">byte-compile-log-buffer</span><span class="p">)</span>
       <span class="p">(</span><span class="nv">goto-char</span> <span class="nv">p</span><span class="p">)</span>
       <span class="p">(</span><span class="nv">recenter</span> <span class="mi">1</span><span class="p">)))))</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">endless/-report-error</span> <span class="p">(</span><span class="nv">fmt</span> <span class="k">&amp;rest</span> <span class="nv">args</span><span class="p">)</span>
  <span class="s">"Print an error on `byte-compile-log-buffer'."</span>
  <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">inhibit-read-only</span> <span class="no">t</span><span class="p">)</span>
        <span class="p">(</span><span class="nv">fill-prefix</span> <span class="s">"    "</span><span class="p">))</span>
    <span class="p">(</span><span class="nv">with-current-buffer</span> <span class="nv">byte-compile-log-buffer</span>
      <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">l</span> <span class="p">(</span><span class="nv">point</span><span class="p">)))</span>
        <span class="p">(</span><span class="nv">insert</span> <span class="s">"\n"</span> <span class="p">(</span><span class="nb">apply</span> <span class="nf">#'</span><span class="nb">format</span> <span class="nv">fmt</span> <span class="nv">args</span><span class="p">))</span>
        <span class="p">(</span><span class="nv">fill-region</span> <span class="p">(</span><span class="nb">1+</span> <span class="nv">l</span><span class="p">)</span> <span class="p">(</span><span class="nv">point</span><span class="p">))))))</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">endless/-flycheck-file</span> <span class="p">(</span><span class="nv">file</span><span class="p">)</span>
  <span class="s">"Check FILE and report to `byte-compile-log-buffer'."</span>
  <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">was-visited</span> <span class="p">(</span><span class="nv">find-buffer-visiting</span> <span class="nv">file</span><span class="p">)))</span>
    <span class="p">(</span><span class="nv">with-current-buffer</span> <span class="p">(</span><span class="nb">or</span> <span class="nv">was-visited</span>
                             <span class="p">(</span><span class="k">progn</span> <span class="p">(</span><span class="nv">find-file</span> <span class="nv">file</span><span class="p">)</span>
                                    <span class="p">(</span><span class="nv">current-buffer</span><span class="p">)))</span>
      <span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nb">ignore-errors</span> <span class="p">(</span><span class="nv">flycheck-buffer</span><span class="p">))</span>
        <span class="p">(</span><span class="nv">while</span> <span class="p">(</span><span class="nv">flycheck-running-p</span><span class="p">)</span>
          <span class="p">(</span><span class="nv">accept-process-output</span> <span class="no">nil</span> <span class="mf">0.1</span><span class="p">))</span>
        <span class="p">(</span><span class="nv">pcase</span> <span class="nv">flycheck-last-status-change</span>
          <span class="p">((</span><span class="nb">or</span> <span class="o">`</span><span class="nv">errored</span> <span class="o">`</span><span class="nv">suspicious</span><span class="p">)</span>
           <span class="p">(</span><span class="nv">endless/-report-error</span>
            <span class="s">"%s: Something wrong here!"</span>
            <span class="p">(</span><span class="nv">file-name-nondirectory</span> <span class="p">(</span><span class="nv">buffer-file-name</span><span class="p">))))</span>
          <span class="p">(</span><span class="o">`</span><span class="nv">finished</span>
           <span class="p">(</span><span class="nb">dolist</span> <span class="p">(</span><span class="nv">e</span> <span class="nv">flycheck-current-errors</span><span class="p">)</span>
             <span class="p">(</span><span class="nv">endless/-report-error</span>
              <span class="s">"%s:%s:%s:%s: %s"</span>
              <span class="p">(</span><span class="nv">file-name-nondirectory</span> <span class="p">(</span><span class="nv">buffer-file-name</span><span class="p">))</span>
              <span class="p">(</span><span class="nv">flycheck-error-line</span> <span class="nv">e</span><span class="p">)</span>
              <span class="p">(</span><span class="nv">flycheck-error-column</span> <span class="nv">e</span><span class="p">)</span>
              <span class="p">(</span><span class="nv">flycheck-error-level</span> <span class="nv">e</span><span class="p">)</span>
              <span class="p">(</span><span class="nv">flycheck-error-message</span> <span class="nv">e</span><span class="p">))))))</span>
      <span class="p">(</span><span class="k">if</span> <span class="nv">was-visited</span>
          <span class="p">(</span><span class="nv">bury-buffer</span> <span class="nv">was-visited</span><span class="p">)</span>
        <span class="p">(</span><span class="nv">kill-buffer</span> <span class="p">(</span><span class="nv">current-buffer</span><span class="p">))))))</span></code></pre></figure>

   <p><a href="http://endlessparentheses.com/flycheck-a-directory-and-report-the-results.html?source=rss#disqus_thread">Comment on this.</a></p>
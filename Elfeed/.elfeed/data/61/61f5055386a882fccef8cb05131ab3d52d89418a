<p>
A few weeks ago I noticed a new package on Melpa called <a href="https://github.com/xuchunyang/github-notifier.el">github-notifier</a> by
Chunyang, which displays a count of your Github notifications on the mode-line.
Instead of just installing the package like a normal person, I had an urge to
try and see how hard it would be to write from scratch. Paradox already has a
function for interacting with the Github API, so it’s just a matter of putting
it to work.
</p>

<p>
The first thing you need to do is visit your <a href="https://github.com/settings/tokens">Github tokens</a> page, and edit the
Paradox token to allow access to your notifications.
</p>

<p>
Next, define a command to visit your notifications, and a function to display a
button in the mode-line.
</p>
<figure class="highlight"><pre><code class="language-cl" data-lang="cl"><span class="p">(</span><span class="nb">defun</span> <span class="nv">endless/visit-notifications</span> <span class="p">()</span>
  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">endless/count-for-mode-line</span> <span class="no">nil</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">browse-url</span> <span class="s">"https://github.com/notifications"</span><span class="p">))</span>

<span class="p">(</span><span class="nb">defvar</span> <span class="nv">endless/gh-mode-line</span> <span class="no">nil</span><span class="p">)</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">endless/count-for-mode-line</span> <span class="p">(</span><span class="nv">data</span><span class="p">)</span>
  <span class="p">(</span><span class="k">setq</span> <span class="nv">endless/gh-mode-line</span>
        <span class="p">(</span><span class="nb">when</span> <span class="nv">data</span>
          <span class="p">(</span><span class="nb">format</span> <span class="s">" GH-%s"</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">data</span><span class="p">))))</span>
  <span class="p">(</span><span class="nv">force-mode-line-update</span><span class="p">))</span>

<span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">'global-mode-string</span>
             <span class="o">'</span><span class="p">(</span><span class="nv">endless/gh-mode-line</span>
               <span class="p">(</span><span class="ss">:propertize</span> <span class="nv">endless/gh-mode-line</span>
                            <span class="nv">local-map</span> <span class="p">(</span><span class="nv">keymap</span> <span class="p">(</span><span class="nv">mode-line</span> <span class="nv">keymap</span> <span class="p">(</span><span class="nv">mouse-1</span> <span class="o">.</span> <span class="nv">endless/visit-notifications</span><span class="p">)))</span>
                            <span class="nv">mouse-face</span> <span class="nv">mode-line-highlight</span><span class="p">)))</span></code></pre></figure>
<p>
For convenience, I’ve also added <code>visit-notifications</code> to my <a href="/launcher-keymap-for-standalone-features.html">launcher-map</a> under
<kbd>n</kbd>.
</p>

<p>
Next, write a function to query the Github API and pass the vector of
results to <code>count-for-mode-line</code>.
</p>
<figure class="highlight"><pre><code class="language-cl" data-lang="cl"><span class="c1">;; If already installed, this does nothing.</span>
<span class="p">(</span><span class="nv">package-install</span> <span class="ss">'paradox</span><span class="p">)</span>
<span class="p">(</span><span class="nv">autoload</span> <span class="ss">'paradox--github-action</span> <span class="s">"paradox-github"</span><span class="p">)</span>
<span class="p">(</span><span class="nb">defun</span> <span class="nv">endless/check-gh-notifications</span> <span class="p">()</span>
  <span class="s">"Check for github notifications and update the mode-line."</span>
  <span class="p">(</span><span class="nv">paradox--github-action</span> <span class="s">"notifications"</span>
    <span class="ss">:reader</span> <span class="p">(</span><span class="k">lambda</span> <span class="p">()</span>
              <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">json-false</span> <span class="no">nil</span><span class="p">)</span>
                    <span class="p">(</span><span class="nv">json-array-type</span> <span class="ss">'list</span><span class="p">))</span>
                <span class="p">(</span><span class="nv">json-read</span><span class="p">)))</span>
    <span class="ss">:callback</span> <span class="nf">#'</span><span class="nv">endless/count-for-mode-line</span><span class="p">))</span></code></pre></figure>

<p>
Finally, just set the timer to some convenient interval. I run it at every 30
seconds of idle time.
</p>
<figure class="highlight"><pre><code class="language-cl" data-lang="cl"><span class="p">(</span><span class="nb">defvar</span> <span class="nv">endless/gh-timer</span>
  <span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nv">bound-and-true-p</span> <span class="nv">paradox-github-token</span><span class="p">)</span>
    <span class="p">(</span><span class="nv">run-with-idle-timer</span> <span class="mi">30</span> <span class="ss">'repeat</span>
                         <span class="nf">#'</span><span class="nv">endless/check-gh-notifications</span><span class="p">)))</span></code></pre></figure>

<p>
And that’s all! Roughly 30 lines of code and you have a convenient notification
system. Whenever you see that <code>GH-2</code> show up at the corner of your mode-line,
just click on it (or type <kbd>C-x l n</kbd>). That will remove the button and take you
to Github. On Github you can navigate with <kbd>j</kbd>, <kbd>k</kbd>, and <kbd>RET</kbd>, and “mark as
read” with <kbd>m</kbd>.
</p>

   <p><a href="http://endlessparentheses.com/using-paradox-for-github-notifications.html?source=rss#disqus_thread">Comment on this.</a></p>
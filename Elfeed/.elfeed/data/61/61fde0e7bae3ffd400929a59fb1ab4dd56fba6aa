<p>I often run into what you might call <em>closet functional programmers</em> &ndash; people
who seem to have a genuine interest in acquainting themselves with a new
paradigm, but just can&rsquo;t manage to find the time to do it. Some of those who do
invest the time often end up on something like the <a href="http://www.haskell.org/haskellwiki/Typeclassopedia">Typeclassopedia</a><sup id="fnref:1"><a href="#fn:1" class="footnote">1</a></sup>,
where the combined force of jargon and type signatures kill whatever interest
they began with.</p>

<p>Thanks to <a href="http://www.amazon.com/gp/product/1449394701/ref=as_li_tf_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1449394701&amp;linkCode=as2&amp;tag=blog0cbb-20"><em>Clojure Programming</em></a>, though, I&rsquo;m happy to report that this will
no longer be a problem. This book gives hope to those who have championed Lisp
and / or functional programming in vain. Emerick et al. provide not only a
thorough tour of the language, but also demonstrate the beauty and conciseness
of its solutions to common problems. The book dedicates an entire section
(&ldquo;Practicum&rdquo;) to describing how Clojure is idiomatically used in different
application domains.</p>

<p>I was particularly pleased by the stellar coverage of some of Clojure&rsquo;s most
compelling features:</p>

<ol>
  <li>Concurrency primitives (<code class="highlighter-rouge">ref</code>, <code class="highlighter-rouge">atom</code>, <code class="highlighter-rouge">agent</code>, <code class="highlighter-rouge">future</code>, and friends)</li>
  <li>The power of the JVM and easy Java interop</li>
  <li>Lisp syntax (which makes for easy and <em>powerful</em> metaprogramming)</li>
  <li>The sequence abstraction</li>
</ol>

<p>These features are all explained in a bottom-up style (fitting for a Lisp!) &ndash;
the authors build up a sizeable example by providing an implementation in small
increments, explaining along the way. This style is a nice parallel to the
nature of traditional Lisp programming.</p>

<p>This book would fit best any of these three groups:</p>

<ul>
  <li><strong>Java refugees.</strong> Give me the JVM, hold the
  <a href="http://static.springsource.org/spring/docs/2.5.x/api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html"><code class="highlighter-rouge">AbstractSingletonProxyFactoryBean</code></a>. <em>Clojure Programming</em> shows you
  how to take advantage of the vast Java ecosystem while avoiding some of the
  pitfalls of having static typing and OOP forced upon you. The authors make a
  good case for interactive programming with the Clojure REPL, which gives you
  a direct line to the JVM not usually available in Java-land.</li>
  <li><strong>Beginning functional programmers.</strong> For those already acquainted with a
  scripting language like Python, Ruby, etc., your first Clojure programs will
  be a breeze. The book spends a chapter first easing you into Clojure syntax
  before presenting the basics of functional programming in all of their
  greatness. You&rsquo;ll come to love the paradigm and appreciate how Clojure
  facilitates its use so effectively.</li>
  <li><strong>Lispers.</strong> While Clojure is by no means a mainstream language, it provides a
  compelling case of a successful Lisp dialect. The later chapters, which
  provide examples of Clojure applications in all sorts of distinct domains,
  will definitely be of interest.</li>
</ul>

<p>Beginners, intermediate users and masters alike will find something of use in
<em>Clojure Programming</em>. It&rsquo;ll be one of the first books I recommend from now on
to anyone curious about Lisp or functional programming.</p>

<p>(Disclosure: I received an electronic copy of this book in exchange for writing
a review.)</p>

<p><img src="http://www.assoc-amazon.com/e/ir?t=blog0cbb-20&amp;l=as2&amp;o=1&amp;a=1449394701" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p>
<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>I&rsquo;ve absolutely nothing against this document &ndash; it&rsquo;s a fascinating and wonderfully helpful piece of work &ndash; but when the first few paragraphs include the words &ldquo;category theory,&rdquo; &ldquo;monoid,&rdquo; etc., etc., beginners will tend to get spooked!&nbsp;<a href="#fnref:1" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div><img src="http://feeds.feedburner.com/~r/foldl/rss/~4/K6cjugnrAH4" height="1" width="1" alt=""/>
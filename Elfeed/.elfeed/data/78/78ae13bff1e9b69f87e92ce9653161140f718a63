From a troll-bait thread asking the argumentative question "why do people use Python"? The answers were, oddly, a long list of strange, nonsensical complaints. And a few logical fallacies. Here are all the ones I could parse:<br /><ol><li>"It's the FORTRAN of our times."</li><li>It's the COBOL of our times.</li><li>"deep seated aversion to languages where whitespace has fundamental syntactic significance".&nbsp;</li><li>"And also where the simplest "Hello world!" program is busted between v2 and v3 (true story)"</li><li>"My stomach turns in a knot at the introduction of EVERY trendy language"</li><li>"I am almost always focused on productization qualities such as maintainability, performance, and any number of other "-ilities"."</li><li>Nobody [cares] about Your language unless You can produce executable</li><li>"It's ghastly. The Python Tools for Visual Studio eases the pain with a full symbolic/visual debugger but still..."</li><li>"the socialist theme of universities leads to preference for open source and "free" over professionally developed and maintained tools...&nbsp;Meanwhile I really like JavaScript as a free wheeling scripting language."</li><li>"Python ... is an inferior language. I can trust a well-engineered JavaScript system."</li><li>"it's worse than fortran because it has a dedicated following"</li><li>"my indictment is maintainability once productized. I always have a fear of building legacy packages that, once a mountain is built and is difficult to move, that people of the future will curse my name"</li><li>"rationally, the continuing investment in the Node/TypeScript infrastructure places JavaScript in an entirely different infrastructure realm than Python"</li><li>"Python doesn't have its equivalent of Node.js"</li><li>"as a LANGUAGE JavaScript has great infrastructure across device types, OS brands, and across every level of scale now imaginable"</li><li>Four separate reasoning-by-analogy: Lisp, FoxPro, PHP, and Perl. (e.g., "Amazon did amazing things with perl.") Somehow a failure involving these languages (or ecosystems or whatever) indicts Python because they're all "trendy" (I think.)</li></ol><div>Yes. There were others that made less sense. I've omitted them.<br /><br />TL;DR: These people don't seem to know what they're talking about. The posts are universally fact-free, so we're just listening to folks rambling randomly about Python.</div><div><br /></div><div>Some responses. Feel free to use these when someone asks you why you're still using Python.</div><div><ol><li>That makes no sense</li><li>That makes&nbsp;no sense</li><li>The languages which are totally free of whitespace appear to be C and maybe C++. This principle rules out JavaScript, since the ASI rules involve wrangling ";" in place of the evil whitespace.</li><li>This is a weird complaint. Stuff changed. How is that a problem? Are you saying change is a problem? What's this then? <a href="https://kangax.github.io/compat-table/es5/">https://kangax.github.io/compat-table/es5/</a>&nbsp;</li><li>Trendy is a problem? Really?</li><li>Who isn't focused on quality attributes?</li><li><a href="http://docs.python-guide.org/en/latest/shipping/freezing/">http://docs.python-guide.org/en/latest/shipping/freezing/</a></li><li>What does "ghastly" mean?</li><li>What's a "socialist theme"? How is JavaScript "free-wheeling"? What does that even mean?</li><li>What is "inferior" being measured? Alphabetically? (Python comes after Javascript, so it's in an inferior position alphabetically?)</li><li>How is a dedicated following a problem?</li><li><a href="http://pypl.github.io/PYPL.html">http://pypl.github.io/PYPL.html</a> Python is second to Java.</li><li>"continuing investment"? By whom? And how does this "investment" compare with Python?</li><li>What's wrong with <a href="https://twistedmatrix.com/trac/" target="_blank">twisted</a>, <a href="http://www.tornadoweb.org/en/stable/" target="_blank">tornado</a>, <a href="http://gunicorn.org/" target="_blank">Gunicorn</a>, and <a href="https://www.fullstackpython.com/nginx.html" target="_blank">Nginx</a>? Don't they count?</li><li>Python is available more-or-less everywhere. Without a specific coverage gap, this makes no sense.</li><li>Also known as the False Equivalence fallacy. Without details of the failure mode, equivalence with Python isn't established.</li></ol><div>Omitted is a random discussion on how Ruby is "rigorously defined". The implication seems to be that Python somehow might not be rigorously defined or something. It's not clear what the sub-thread was about, so I ignored it.<br /><br />This thread seemed to involve two kinds of complaints:<br /><ul><li>Utter nonsense.</li><li>Lies that are pretty east to refute.</li></ul></div></div><div>And there's this:&nbsp;<a href="https://medium.freecodecamp.com/million-requests-per-second-with-python-95c137af319">https://medium.freecodecamp.com/million-requests-per-second-with-python-95c137af319</a></div>
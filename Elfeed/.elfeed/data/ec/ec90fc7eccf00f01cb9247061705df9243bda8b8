<p> A couple of weeks ago I saw this nice post on <a href="http://samrowe.com/wordpress/advancing-in-the-bash-shell/">advanced Bash shortcuts</a> over at <a href="http://samrowe.com">${me:-whatever}</a>, If you haven’t seen it, be sure to take a look. Even though I’ve been using Bash for more years than I care to contemplate, I still learned a couple of things I didn’t know<img alt="—" class="wp-smiley" src="https://s.w.org/images/core/emoji/2.2.1/72x72/2014.png" style="height: 1em;" />or at least a couple of things that I may have known but had forgotten. </p>
<p> I was reminded of that post when I read Mickey’s latest <a href="https://www.masteringemacs.org">Mastering Emacs</a> offering, <a href="https://www.masteringemacs.org/article/shell-comint-secrets-history-commands">Shell &amp; Comint Secrets: History commands</a>. It turns out that many (most) of those Bash shortcuts are available in any comint process. That includes the shell command, of course, but it’s also true of things like the Python shell. </p>
<p> Mickey shows a number of ways to use these shortcuts to ease your workflow. Some of them are probably too much trouble to bother with but some are really useful. For example, you can capture the <span class="MathJax_Preview"><img alt="n^\text{th}" class="tex" src="http://irreal.org/blog/wp-content/plugins/latex/cache/tex_b320dd96e0efaaabd7e13eddf120ed1a.gif" style="vertical-align: middle; border: none; padding-bottom: 1px;" /></span> argument of the last command and reinsert it in the current command. If you’ve ever had to use <code>a/really/long/path/with/ReallyLongNames</code> in several commands in a row, you can see how this could be a real time saver. </p>
<p> Head on over to Mickey’s post to get the details and see some of the other shortcuts and how you can leverage them. Everything Mickey posts is a must read for Emacsers and this post is no exception. </p>
#+TAGS: WORK FAMILY PERSONAL
* Inbox

** CANCELLED [#B] http://cs2.swfc.edu.cn/~wx672/lecture_notes/linux/latex/latex_tutorial.html
   CLOSED: [2017-03-13 Mon 13:05]
   :LOGBOOK:
   - State "CANCELLED"  from "TODO"       [2017-03-13 Mon 13:05] \\
     尋思,暫時不需要學習 latex 語法,分散了學習時間
   :END:
** CANCELLED [#B] make sure which item affect the connection in my /etc/resolv.conf
   CLOSED: [2017-03-27 Mon 11:20]
   :LOGBOOK:
   - State "CANCELLED"  from "TODO"       [2017-03-27 Mon 11:20] \\
     dont have enough time and knowledge base
   :END:
   in my /etc/reslov.conf , i added 4 items, i wana know which really make my chrome
   connect to google.
   1. commant "search vpn"?
   2. commant "8.8.8.8"
   3. ...
** SOMEDAY [#B] 通讀子龍的 emacs 配置                               :spacemacs:

** DONE [#B] 學習如何給 chrome capture 的文章做腳注筆記
   CLOSED: [2017-03-27 Mon 11:20] SCHEDULED: <2017-03-13 Mon 09:00>
   :PROPERTIES:
   :Effort:   10
   :END:
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2017-03-27 Mon 11:20]
   - need some more improvement
   :END:

** TODO [#B] 明天要詳細理解,肢解後歸檔代碼                  :emacs:hack:code:
   SCHEDULED: <2017-03-13 Mon 09:30>
   :PROPERTIES:
   :Effort:   30
   :END:
[[file:journal.org::*%E5%A4%A7%E7%A5%9E%E6%94%B9%E9%80%B2elfeed%E7%9A%84%E9%A1%8F%E8%89%B2%E9%A1%AF%E7%A4%BA,%E4%B8%A6%E5%A2%9E%E5%8A%A0%E6%89%93%E5%88%86%E5%8A%9F%E8%83%BD][大神改進 elfeed 的顏色顯示,並增加打分功能]]

** TODO [#B] 昨天沒有解決給 elfeed entry 打分並高亮
   SCHEDULED: <2017-03-13 Mon 10:00>
[[file:~/.spacemacs.d/layers/zilongshanren-misc/packages.el::;;%20yiddi:add%20to%20customize%20the%20appearance%20of%20elfeed]]
LOGBOO:
1. 我開始在 zilong 配置中增加了 elfeed
2. 此後就一直出現, elfeed-feeds 被重置的問題
3. 這一次打分程序無效
4. 我就又把 elfeed 從子龍的生命 packages 中刪除了
END:

** DONE [#C] 給老哥電話訂家具
   CLOSED: [2017-03-27 Mon 11:21] SCHEDULED: <2017-03-14 Tue 14:00>
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2017-03-27 Mon 11:21]
   :END:
** DONE [#B] 下午房子砸牆，陽臺
   CLOSED: [2017-03-27 Mon 11:21] SCHEDULED: <2017-03-12 Sun 16:00>
   :LOGBOOK:
   - State "DONE"       from "STARTED"    [2017-03-27 Mon 11:21]
   :END:
** DONE [#C] 溝通解決新城窗戶莊歪問題
   CLOSED: [2017-03-27 Mon 11:21] SCHEDULED: <2017-03-13 Mon 13:00>
   :LOGBOOK:
   - State "DONE"       from "STARTED"    [2017-03-27 Mon 11:21]
   - who response this vendor, says that he will order someone to fix this issue
   :END:

** TODO [#B] 整理 journal.org 中的所有文章格式整理,美化,並歸檔

** TODO [#B] 這個問題沒有解決,代碼是正確的,但 elfeed-scratch 中並沒有顯示出效果
[[file:~/.spacemacs.d/layers/zilongshanren-misc/packages.el::;;%20starting%20point.][大神定制 elfeeed entry 顏色顯示]]

** TODO [#B] 查看那天觀看用 emacs 進行科學研究的 youtube 視頻
   重點在於,他用了哪些包,以此來擴展一下自己的視野

** TODO [#A] 繼續整理自己的全知識 doc
   DEADLINE: <2017-03-13 Mon 11:30> SCHEDULED: <2017-03-14 Tue 08:00>

** CANCELLED [#B] 學習 skeleton-mode                               :PERSONAL:
   CLOSED: [2017-08-11 Fri 19:09] DEADLINE: <2017-03-14 Tue 16:00> SCHEDULED: <2017-03-14 Tue 14:00>
   :LOGBOOK:
   - State "CANCELLED"  from "DONE"       [2017-08-11 Fri 19:09] \\
     并没有实施，似乎并不重要
   - State "DONE"       from "STARTED"    [2017-08-11 Fri 19:09]
   CLOCK: [2017-03-15 Wed 09:56]--[2017-03-15 Wed 13:12] =>  3:16
   CLOCK: [2017-03-15 Wed 09:49]--[2017-03-15 Wed 09:53] =>  0:04
   CLOCK: [2017-03-15 Wed 09:25]--[2017-03-15 Wed 09:34] =>  0:09
   CLOCK: [2017-03-14 Tue 09:41]--[2017-03-14 Tue 11:41] =>  2:00
   CLOCK: [2017-03-14 Tue 06:58]--[2017-03-14 Tue 07:43] =>  0:45
   SOME-TIPS:
         1. checklists are good for making sure that you complete tasks more
            consistently, not missing any important steps. you can work faster
            when there’s a guide, since you don’t have to keep thinking of the
            next step each time. The simple act of checking things off can
            encourage you to put in more effort, since the list shows you your
            progress. It also makes it easier to remember to follow up.
         2. 用鏈接來組織筆記架構,用鏈接來記錄每天任務的完成列表存檔

   :END:

** DONE [#B] 搞清楚 pandoc-mode 是怎麼運行的,最好能實現自動化把 html 轉爲 org
   CLOSED: [2017-03-27 Mon 11:22]
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2017-03-27 Mon 11:22]
   :END:
   比如一旦發現 download 文件中出現 html,就自動轉換爲某個文件夾下的 org

** DONE [#B] 找個模板能讓 src-block 裏的代碼背景色高粱
   CLOSED: [2017-08-11 Fri 19:08]
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2017-08-11 Fri 19:08]
   :END:

** TODO [#B] appointment 好像起作用了,看看他是如何工作的.
   我記得應該是加在 org zilong package 位置的代碼,關於 reminder 的.
   他是 12min before 提醒的,彈出了一個小 buffer 左下角,持續了幾秒鍾,消失了
   看看如何設置
   13:48 左右


** TODO 學習這種思想

         1. Checklists are good for making sure that you complete tasks more
            consistently, not missing any important steps. You can work faster
            when there’s a guide, since you don’t have to keep thinking of the
            next step each time. The simple act of checking things off can
            encourage you to put in more effort, since the list shows you your
            progress. It also makes it easier to remember to follow up.
         2. 用鏈接來組織筆記架構,用鏈接來記錄每天任務的完成列表存檔

** DONE [#B] 監工窗臺維修進度, 2017-03-15.
   CLOSED: [2017-08-11 Fri 19:08] SCHEDULED: <2017-03-17 Fri 09:30>
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2017-08-11 Fri 19:08]
   :END:
   如果兩天還沒開始動工,就警告租房補償.
   他有可能在消極怠工,拖時間.反正我就耗着,你也得住.
   這樣,我們已經累積溝通好幾次了.這個問題必須搞好.反正現在都流行上訪投訴.
   再不行我就打 315,也剛過去沒幾天.你看着辦,我現在也不要賠償,你就給我把窗戶
   弄好.


** TODO [#B] 應該把學習編程當成翻譯課,每天練習翻譯
   SCHEDULED: <2017-03-16 Thu 09:00>

** TODO [#B] 學習陳斌的文章, yasnippet 內部是支持代碼運行的,似乎...有點想法
   SCHEDULED: <2017-03-20 Mon 09:00>
http://blog.binchen.org/posts/how-to-use-yasnippets-to-produce-email-templates-in-emacs.html

** TODO [#B] 看看這個視頻中的公式是如何直接輸出出來的.
   SCHEDULED: <2017-03-20 Mon 09:00>
https://www.youtube.com/watch?v=cRUCiF2MwP4

** TODO [#B] 我未來的知識庫,肯定少不了這個
   SCHEDULED: <2017-03-20 Mon 09:00>
https://xapian.org/docs/

** DONE [#B] 總結一下 mu4e 的配置
   CLOSED: [2017-08-11 Fri 19:06] DEADLINE: <2017-08-11 Fri> SCHEDULED: <2017-03-20 Mon 09:00>
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2017-08-11 Fri 19:06]
   :END:
http://www.brool.com/post/using-mu4e/

** TODO  學習一下那個如何記賬的夥計 youtube
   SCHEDULED: <2017-03-20 Mon 14:00>

** DONE [#B] ABC's loan due to check
   CLOSED: [2017-03-27 Mon 11:19] SCHEDULED: <2017-03-22 Wed 10:30>
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2017-03-27 Mon 11:19]
   :END:

** CANCELLED [#B] 给 org 不同的 block 分配不同的颜色
   CLOSED: [2017-08-11 Fri 19:06]
   :LOGBOOK:
   - State "CANCELLED"  from "TODO"       [2017-08-11 Fri 19:06] \\
     鉴于 org note 并不是那么美观，而且这个耗时的任务暂时应该搁浅
   :END:
   比如我在做笔记时，习惯用 quote-block 记录算法，
   用 src-block 记录代码，我希望一眼就能区分两者。
   所以我需要对不同的 block 设置不同的颜色

** CANCELLED [#B] 利用 EGO 这个中文静态站点来搞自己的网页
   CLOSED: [2017-08-11 Fri 19:07]
   :LOGBOOK:
   - State "CANCELLED"  from "TODO"       [2017-08-11 Fri 19:07] \\
     始终没能抽出时间来处理自己的网页，暂时搁浅，等有时间再说
   :END:

https://emacs-china.github.io/EGO/

** TODO [#B] This is just a test, so deleted some time
* Workspace

** TODO [#B] PROG: match and case as parameter

   #+BEGIN_SRC scala
     import java.util.Calendar

     val date = raw"(\d{4})-(\d{2})-(\d{2})".r

     val dates = "Important dates in history: 2004-01-20, 1958-09-05, 2010-10-06, 2011-07-15"

     val redacted    = date.replaceAllIn(dates, "XXXX-XX-XX")
     val yearsOnly   = date.replaceAllIn(dates, m => m.group(1))

     val months      = (0 to 11).map {
       i => val c = Calendar.getInstance;
            c.set(2014, i, 1);
            f"$c%tb" }

     val reformatted = date.replaceAllIn(
       dates,
       // match can be passed as non-fn para
       _ match { case date(y,m,d) => f"${months(m.toInt - 1)} $d, $y" })
   #+END_SRC

   case clause can be passed to fn para;
   match clasue can be passed to non-fn para;

   *Beautiful these two brothers can hold all the parameter business.*

** TODO [#B] PORG: some strange ERROR about case function
   #+BEGIN_SRC scala
     arr.reduceLeft{    // RIGHT
       (a, b) => if (a>=b) a else b
     }

     val fn: (Int,Int) => Int = {
       case (a, b) => if (a>=b) a else b
     }

     arr.reduceLeft(fn) // RIGHT

     arr.reduceLeft{    // WRONG
       case (a:Int,b:Int) => if (a>=b) a else b
     }
   #+END_SRC

** TODO [#B] compare two snippet codes about the case function

   #+BEGIN_SRC scala
     val (rainyTmp, rainyDays2) = data.foldLeft(0.0 -> 0) {
       case ((a, b), tempInfo) if tempInfo.prcp >= 1.0 => (a+tempInfo.tmax, b+1)
     }
   #+END_SRC

   #+BEGIN_SRC scala
     val (rainySum,rainyCount2) = data.foldLeft(0.0 -> 0) {
       case ((sum, cnt), td) =>
         if(td.precip < 1.0) (sum, cnt) else (sum + td.tmax, cnt + 1)
     }
   #+END_SRC

   The biggest difference is that: *first will lead to MatchError*

   * pattern and  if-guard => small pattern
   * pattern then if-gurad => same pattern

   So, the first case clause can not match all situation, and will lead *MatchError*
   the ~pattern and if-guard~ is always used to *ignore* some unrequire element by
   ~for~ and ~flatMap~.

   #+BEGIN_SRC scala
     import scala.util.Random

     val arrTup = Array.fill(30)((Random.nextInt(100), Random.nextInt(100)))

     // ignore all elements whose a <= 50
     for((a,b) <- arrTup
         if a>50) yield (a,b)

     // ignore all elements whose a <= 50
     arrTup.flatMap{
       case (a, b) if a>50 => Seq(a -> b)
       case _ => Seq.empty
     }

   #+END_SRC

** TODO [#B] Compare two code snippet about case clause

   #+BEGIN_SRC scala
     case (a, b) => {
       val sum = b.foldLeft(0.0){(a,b) => a + b.tmax}
       (a, sum)
     }
   #+END_SRC

   #+BEGIN_SRC scala
     case (m, days) =>
           m -> days.foldLeft(0.0)((sum, td) => sum + td.tmax) / days.length
   #+END_SRC

   It's obviously that, the latter one is better.

   In fact, functional languages are very skilled at dealing with *holographic*

   one part by one part related:

   #+BEGIN_QUOTE
   (a, b)
   a -> { some functions about b}
   #+END_QUOTE

** TODO [#B] new spacemacs hotkey find
   | C =   | highlight all this 'word' in current buffer |   |
   | C = e | modify all this 'wrod' same time            |   |
   | C = / | find this word in project                   |   |
   | C = f | find this word in file                      |   |
   | C = b | find this word in buffer                    |   |

** TODO [#B] find new key in spc
   | C o | jump back |

** TODO [#B] String has a boolean method: start with
   very useful in data science, usually to filter out or filter in by the data format which ends or starts with
   something.

** TODO [#B] String methods to chop to get subString is very useful in DS
   String.drop(3).dropRight(2)

   //  LASBS060000000000003
   //  ^^^BS0600000000000^^

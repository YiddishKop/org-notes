* TODO                                            :emacs:lisp:zilong:hotspot:
#+BEGIN_SRC emacs-lisp
(defun zilongshanren//hotspots-sources ()
  "Construct the helm sources for my hotspots"
  `((name . "Mail and News")
    (candidates . (("Calendar" . (lambda ()  (browse-url "https://www.google.com/calendar/render")))
                   ("RSS" . elfeed)
                   ("Blog" . org-octopress)
                   ("Github" . (lambda() (helm-github-stars)))
                   ("Calculator" . (lambda () (helm-calcul-expression)))
                   ("Run current flie" . (lambda () (zilongshanren/run-current-file)))
                   ("Agenda" . (lambda () (org-agenda "" "a")))
                   ("sicp" . (lambda() (browse-url "http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-4.html#%_toc_start")))))
    (candidate-number-limit)
    (action . (("Open" . (lambda (x) (funcall x)))))))

#+END_SRC
* %?    :zilong:org:capture:
#+BEGIN_SRC emacs-lisp
      (setq :zilong:org:capture:org-capture-templates
            '(("t" "Todo" entry (file+headline org-agenda-file-gtd "Workspace")
               "* TODO [#B] %?\n  %i\n"
               :empty-lines 1)
              ("n" "notes" entry (file+headline org-agenda-file-note "Quick notes")
               "* %?\n  %i\n %U"
               :empty-lines 1)
              ("b" "Blog Ideas" entry (file+headline org-agenda-file-note "Blog Ideas")
               "* TODO [#B] %?\n  %i\n %U"
               :empty-lines 1)
              ;; yiddi:comment ------------------
              ;; ("s" "Code Snippet" entry
              ;;  (file org-agenda-file-code-snippet)
              ;;  "* %?\t\n#+BEGIN_SRC \n\n#+END_SRC")
              ;; ("w" "work" entry (file+headline org-agenda-file-gtd "Cocos2D-X")
              ;;  "* TODO [#A] %?\n  %i\n %U"
              ;;  :empty-lines 1)
              ;; yiddi:add to collect good source code block-------------------------------
              ("s" "Code Snippet" entry
               (file org-agenda-file-code-snippet)
               "* %?\t:hotspot:\n#+BEGIN_SRC \n%c\n#+END_SRC\nFile:%F\nTime:%T")
              ("c" "Chrome" entry (file+headline org-agenda-file-note "Quick notes")
               "* [#C] %?\n %(zilongshanren/retrieve-chrome-current-tab-url)\n %i\n %U"
               :empty-lines 1)
              ("l" "links" entry (file+headline org-agenda-file-note "Quick notes")
               "* [#C] %?\n  %i\n %a \n %U"
               :empty-lines 1)
              ("j" "Journal Entry"
               entry (file+datetree org-agenda-file-journal)
               "* %?"
               :empty-lines 1)
              ;; yiddi:add to coordinate with org-capture extension in chrome. -----------
              ("p" "Protocol" entry (file+headline org-agenda-file-journal"Chome Inbox")
               "* TODO %c\nSource: %u, %c\n #+BEGIN_QUOTE\n%i\n#+END_QUOTE\n\n\n%?"
               :immediate-finish)
              ("L" "Protocol Link" entry (file+headline org-agenda-file-journal"Chome Inbox")
               "* TODO  %? [[%:link][%:description]] \nCaptured On: %U"
               )
              ("f" "family-todo" entry (file+headline org-agenda-file-gtd "Family")
               "* TODO [#C] %?\n  %i\n %U"
               :empty-lines 1)
              ;; -------------------------------------------------------------------------
              ))

#+END_SRC
File:/home/yiddi/.spacemacs.d/layers/zilongshanren-org/packages.el
* DONE some code snippet                                :zilong:org:property:
  CLOSED: [2017-03-12 Sun 09:55]
  :LOGBOOK:
  - State "DONE"       from "MEETING"    [2017-03-12 Sun 09:56]
  :END:
#+BEGIN_SRC org
#+TITLE:   Code Snippets in Org Mode
#+AUTHOR:  Yiddish.kop
#+EMAIL:   yiddishkop@163.com
#+DATE:    <2017-03-01 三>

#+END_SRC
File:/home/yiddi/Documents/org-notes/Tests/test-org-code.org
* 定制化org-capture界面的模板快捷鍵                      :zilong:org:capture:
#+BEGIN_SRC emacs-lisp
      (setq org-agenda-custom-commands
            '(
              ("w" . "任务安排")
              ("wa" "重要且紧急的任务" tags-todo "+PRIORITY=\"A\"")
              ("wb" "重要且不紧急的任务" tags-todo "-Weekly-Monthly-Daily+PRIORITY=\"B\"")
              ("wc" "不重要且紧急的任务" tags-todo "+PRIORITY=\"C\"")
              ("b" "Blog" tags-todo "BLOG")
              ("p" . "项目安排")
              ("pw" tags-todo "PROJECT+WORK+CATEGORY=\"cocos2d-x\"")
              ("pl" tags-todo "PROJECT+DREAM+CATEGORY=\"zilongshanren\"")
              ("W" "Weekly Review"
               ((stuck "") ;; review stuck projects as designated by org-stuck-projects
                (tags-todo "PROJECT") ;; review all projects (assuming you use todo keywords to designate projects)
                ))))

#+END_SRC
Link:   [[file:~/.spacemacs.d/layers/zilongshanren-org/packages.el]]
File:   /home/yiddi/.spacemacs.d/layers/zilongshanren-org/packages.el
* what is 'stuck' means in org                               :org:stuck:todo:
#+BEGIN_SRC org
      (setq org-stuck-projects
            '("TODO={.+}/-DONE" nil nil "SCHEDULED:\\|DEADLINE:"))

#+END_SRC
Link:   [[file:~/.spacemacs.d/layers/zilongshanren-org/packages.el::'("TODO={.+}/-DONE"%20nil%20nil%20"SCHEDULED:\\|DEADLINE:"))]]
File:   /home/yiddi/.spacemacs.d/layers/zilongshanren-org/packages.el
* org capture 模板實例                                     :org:capture:todo:
     #+BEGIN_SRC org
     * SOMEDAY %^{Author} - %^{Title}
     :PROPERTIES:
     :PAGES: %^{Pages}
     :GENRE: %^{Genre}
     :END:

     - Recommended by %^{recommended by}
     :LOGBOOK:
     - Added: %U
     :END:

     #+END_SRC
Link:   [[file:~/.spacemacs.d/layers/zilongshanren-org/packages.el:::empty-lines%201)]]
File:   /home/yiddi/.spacemacs.d/layers/zilongshanren-org/packages.el
* MESSY [func impl] insert a line beneath the cursor                  :elisp:
#+BEGIN_SRC emacs-lisp
   instert a line beneath the cursor.
   #+BEGIN_SRC emacs-lisp
;; yiddi comment
;; 1. cache current state of emacs
;; 2. move to the head of line
;; 3. newline
;; 1 and 4 -> save-excursion
(defun my/insert-line-before ()
  "Insert a newline above the line containing the cursor."
  (interactive)
  (save-excursion ;; save the state before run this funtion
    (move-beginning-of-line 1)
    (newline)) ;; <-- Hrm..
  ;; go back to where i started
  )
   #+END_SRC

#+END_SRC
Link:   [[file:~/Documents/org-notes/notes.org::*Emacs%20introduction%20and%20demonstrattion][Emacs introduction and demonstrattion]]
File:   /home/yiddi/Documents/org-notes/notes.org
